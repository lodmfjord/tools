
get_shell_name() {
    local pid=$$
    local ppid=$(ps -p "$pid" -o ppid= | xargs)
    get_process_name_by_pid() {
        local proc_pid=$1
        local proc_name=$(ps -o comm= -p "$proc_pid")
        echo "$proc_name"
    }
    
    local current_shell_name=$(get_process_name_by_pid "$pid")
    local parent_shell_name=$(get_process_name_by_pid "$ppid")
    
    
    if [[ "$current_shell_name" == "bash" ]] || [[ "$parent_shell_name" == "bash" ]]; then
        echo "bash"
        elif [[ "$current_shell_name" == "zsh" ]] || [[ "$parent_shell_name" == "zsh" ]]; then
        echo "zsh"
    else
        echo "Unknown shell"
    fi
    
}


update_aws_bash_login() {
    local bashrc="$HOME/.bashrc"
    local temp_file=$(mktemp)
    
    local block="#AWS_LOGIN - AUTOGENERATED
    function aws_login() {
        source ~/bin/.aws-login \"\$@\"
    }
    alias aws-login='aws_login'
    export AWS_LOGIN_TOOL_FOR_FUN=true
    #AWS_LOGIN - ENDOF AUTOGENERATED"
    
    if grep -q "#AWS_LOGIN - AUTOGENERATED" "$bashrc"; then
        sed '/#AWS_LOGIN - AUTOGENERATED/,/#AWS_LOGIN - ENDOF AUTOGENERATED/d' "$bashrc" > "$temp_file"
        mv "$temp_file" "$bashrc"
        cat $temp_file
    fi
    
    echo "$block" >> "$bashrc"
}
update_aws_bash_login() {
    local bashrc="$HOME/.bashrc"
    local temp_file=$(mktemp)
    
    # Define the block to be added
    local block="#AWS_LOGIN - AUTOGENERATED
    function aws_login() {
        source ~/bin/.aws-login \"\$@\"
    }
    alias aws-login='aws_login'
    export AWS_LOGIN_TOOL_FOR_FUN=true
    #AWS_LOGIN - ENDOF AUTOGENERATED"
    
    if grep -q "#AWS_LOGIN - AUTOGENERATED" "$bashrc"; then
        sed '/#AWS_LOGIN - AUTOGENERATED/,/#AWS_LOGIN - ENDOF AUTOGENERATED/d' "$bashrc" > "$temp_file"
        mv "$temp_file" "$bashrc"
    fi
    
    echo "$block" >> "$bashrc"
}


install() {
    shell_name=$(get_shell_name)
    src=$(realpath "$0")
    dest=$(realpath ~/bin/.aws-login)
    destFolder=$(dirname "$dest")
    
    if [ "$src" != "$dest" ]; then
        echo "Installing aws-login to $dest"
        mkdir -p $destFolder
        cp -f "$0" $dest
        chmod +x $dest
    fi
    if [ "$shell_name" = "bash" ]; then
        echo Installing aws-login to $HOME/.bashrc
        update_aws_bash_login
        elif [ "$shell_name" = "zsh" ]; then
        echo "Installing aws-login to $HOME/.zshrc"
        update_aws_zsh_login
    else
        echo "Unknown shell $shell_name"
        SKIP_EARLY=true
        exit 1
    fi
    if [ "${SKIP_EARLY-}" ]; then
        echo "Reload your shell"
        echo "Done"
    fi
}

if [ -z "${AWS_LOGIN_TOOL_FOR_FUN-}" ]; then
    install
    HAD_TO_INSTALL=true
fi

display_help() {
    echo "Usage: $0 [profile_name] [--clear] [--instal] [--help] [--export]"
    echo
    echo "Arguments:"
    echo "  profile_name   Name of the AWS profile to use."
    echo "  --clear        Clear all AWS environment variables."
    echo "  --install      Install the aws-login tool."
    echo "  --help         Display this help information."
    echo "  --export       Export AWS environment variables for the specified profile."
    echo
    echo "Example:"
    echo "  $0 myprofile --export"
    echo "  $0 --clear"
}

clear() {
    unset AWS_ACCESS_KEY_ID
    unset AWS_SECRET_ACCESS_KEY
    unset AWS_SESSION_TOKEN
    unset AWS_DEFAULT_REGION
    unset AWS_REGION
    unset AWS_PROFILE
    export AWS_REGION
    export AWS_DEFAULT_REGION
    export AWS_ACCESS_KEY_ID
    export AWS_SECRET_ACCESS_KEY
    export AWS_SESSION_TOKEN
    export AWS_PROFILE
}
if [ -z "${HAD_TO_INSTALL-}" ]; then
    
    profile_list=$(aws configure list-profiles)
    profile_array=()
    for i in $profile_list; do profile_array+=($i) ; done
    
    
    CURRENT_PROFILE="${PROFILE-}"
    SHOULD_EXPORT=false
    for arg in "$@"; do
        if [ "${SKIP_EARLY-}" ]; then
            break
        fi
        if [ "$arg" = "--help" ]; then
            display_help
            exit 0
            elif [ "$arg" = "--install" ]; then
            install
            SKIP_EARLY=true
            elif [ "$arg" = "--clear" ]; then
            clear
            echo "AWS environment variables cleared."
            sh -c 'export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID; export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY; export AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN; export AWS_<_KEY=$AWS_SECRET_KEY; export AWS_PROFILE=$AWS_PROFILE; export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION; export AWS_REGION=$AWS_REGION;  exec bash'
            SKIP_EARLY=true
            elif [ "$arg" = "--export" ]; then
            SHOULD_EXPORT=true
        else
            PROFILE=$arg
        fi
    done
    
    clear
    if [ -z "${SKIP_EARLY}" ]; then
        if [ -z "${PROFILE-}" ]; then
            echo -e "\033[1mSelect profiles\033[0m"
            echo "----------------"
            select profile in "${profile_array[@]}"; do
                if [[ -n $profile ]]; then
                    echo "You selected $profile"
                    PROFILE=$profile
                    break
                else
                    echo "Invalid choice. Please try again."
                fi
            done
            
        fi
        
        if [[ ! " ${profile_array[@]} " =~ " ${PROFILE-} " ]]; then
            if [ -z "${PROFILE-}" ]; then
                echo "No profile specified."
            else
                echo "Profile $PROFILE does not exist."
            fi
            exit 1
        fi
        
        
        if ! aws sts get-caller-identity --profile=$PROFILE >/dev/null 2>&1; then
            echo "AWS credentials are invalid or expired."
            aws sso login --profile=$PROFILE
        else
            echo "Done"
        fi
        
        
        export AWS_PROFILE=$PROFILE
        echo "AWS Profile set to $PROFILE"
        
        if [ "$SHOULD_EXPORT" = "true" ]; then
            eval "$(aws configure export-credentials --profile $PROFILE --format env)"
            echo "AWS environment variables exported."
            export AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY
            export AWS_SESSION_TOKEN
        fi
    fi
fi